"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const node_sarif_builder_1 = require("node-sarif-builder");
const path = require("path");
const pkg = require('../../../package.json');
const sarifFormatter = function (formatter) {
    formatter.on('end', (event) => {
        const arrAllMessages = event.arrAllMessages;
        const sarifBuilder = new node_sarif_builder_1.SarifBuilder();
        const sarifRunBuilder = new node_sarif_builder_1.SarifRunBuilder().initSimple({
            toolDriverName: 'HTMLHint',
            toolDriverVersion: pkg.version,
            url: 'https://htmlhint.com/',
        });
        const addedRuleSet = new Set();
        arrAllMessages.forEach((result) => {
            result.messages.forEach((message) => {
                const rule = message.rule;
                if (addedRuleSet.has(rule.id)) {
                    return;
                }
                addedRuleSet.add(rule.id);
                const sarifRuleBuilder = new node_sarif_builder_1.SarifRuleBuilder().initSimple({
                    ruleId: rule.id,
                    shortDescriptionText: rule.description,
                    helpUri: rule.link,
                });
                sarifRunBuilder.addRule(sarifRuleBuilder);
            });
        });
        arrAllMessages.forEach((result) => {
            result.messages.forEach((message) => {
                const sarifResultBuilder = new node_sarif_builder_1.SarifResultBuilder();
                const ruleId = message.rule.id;
                const sarifResultInit = {
                    level: message.type === "info"
                        ? 'note'
                        : message.type.toString(),
                    messageText: message.message,
                    ruleId: ruleId,
                    fileUri: path
                        .relative(process.cwd(), result.file)
                        .replace(/\\/g, '/'),
                    startLine: message.line,
                    startColumn: message.col,
                    endLine: message.line,
                    endColumn: message.col,
                };
                sarifResultBuilder.initSimple(sarifResultInit);
                sarifRunBuilder.addResult(sarifResultBuilder);
            });
        });
        sarifBuilder.addRun(sarifRunBuilder);
        const sarifContent = sarifBuilder.buildSarifJsonString({ indent: true });
        console.log(sarifContent);
        (0, fs_1.writeFileSync)('htmlhint.sarif', sarifContent);
    });
};
module.exports = sarifFormatter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FyaWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2xpL2Zvcm1hdHRlcnMvc2FyaWYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQkFBa0M7QUFFbEMsMkRBSzJCO0FBQzNCLDZCQUE0QjtBQUk1QixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtBQUU1QyxNQUFNLGNBQWMsR0FBc0IsVUFBVSxTQUFTO0lBQzNELFNBQVMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDNUIsTUFBTSxjQUFjLEdBQUcsS0FBSyxDQUFDLGNBQWMsQ0FBQTtRQUczQyxNQUFNLFlBQVksR0FBRyxJQUFJLGlDQUFZLEVBQUUsQ0FBQTtRQUd2QyxNQUFNLGVBQWUsR0FBRyxJQUFJLG9DQUFlLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDdkQsY0FBYyxFQUFFLFVBQVU7WUFDMUIsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLE9BQU87WUFDOUIsR0FBRyxFQUFFLHVCQUF1QjtTQUM3QixDQUFDLENBQUE7UUFHRixNQUFNLFlBQVksR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFBO1FBQ3RDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUNoQyxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNsQyxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFBO2dCQUN6QixJQUFJLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFO29CQUM3QixPQUFNO2lCQUNQO2dCQUNELFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO2dCQUN6QixNQUFNLGdCQUFnQixHQUFHLElBQUkscUNBQWdCLEVBQUUsQ0FBQyxVQUFVLENBQUM7b0JBQ3pELE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRTtvQkFDZixvQkFBb0IsRUFBRSxJQUFJLENBQUMsV0FBVztvQkFDdEMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJO2lCQUNuQixDQUFDLENBQUE7Z0JBQ0YsZUFBZSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO1lBQzNDLENBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFDLENBQUE7UUFHRixjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDaEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDbEMsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLHVDQUFrQixFQUFFLENBQUE7Z0JBQ25ELE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFBO2dCQUM5QixNQUFNLGVBQWUsR0FBRztvQkFDdEIsS0FBSyxFQUNILE9BQU8sQ0FBQyxJQUFJLFdBQW9CO3dCQUM5QixDQUFDLENBQUMsTUFBTTt3QkFDUixDQUFDLENBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQW1CO29CQUMvQyxXQUFXLEVBQUUsT0FBTyxDQUFDLE9BQU87b0JBQzVCLE1BQU0sRUFBRSxNQUFNO29CQUNkLE9BQU8sRUFBRSxJQUFJO3lCQUNWLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQzt5QkFDcEMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUM7b0JBQ3RCLFNBQVMsRUFBRSxPQUFPLENBQUMsSUFBSTtvQkFDdkIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxHQUFHO29CQUN4QixPQUFPLEVBQUUsT0FBTyxDQUFDLElBQUk7b0JBQ3JCLFNBQVMsRUFBRSxPQUFPLENBQUMsR0FBRztpQkFDZCxDQUFBO2dCQUNWLGtCQUFrQixDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQTtnQkFDOUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO1lBQy9DLENBQUMsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFDLENBQUE7UUFFRixZQUFZLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFBO1FBQ3BDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO1FBQ3hFLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUE7UUFDekIsSUFBQSxrQkFBYSxFQUFDLGdCQUFnQixFQUFFLFlBQVksQ0FBQyxDQUFBO0lBQy9DLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxjQUFjLENBQUEifQ==